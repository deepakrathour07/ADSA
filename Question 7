Explain the sliding window technique and its use in string problems.  
Answer-

The Sliding Window Technique is a smart way to solve problems involving subarrays or substrings. Instead of using nested loops (which can be slow, O(nÂ²)), sliding 
window allows you to process a portion of the array or string at a time, and "slide" through it efficiently in O(n) time.

Examples in String Problems:
Problem	Sliding Window Role
Longest Substring Without Repeating Characters	Expand window until duplicate, shrink until valid.
Longest Substring with At Most K Distinct Characters	Keep a frequency map; shrink window when distinct count exceeds K.
Minimum Window Substring (cover all target characters)	Expand until all characters covered, then shrink to minimize window.
Fixed-Length Substring with Maximum Sum of Character Values	Classic fixed-size window: move one character at a time, updating sum.
Imagine you have a long line of candies (a string). You want to find a small group of candies (a substring) that has a special property, like having exactly 3 red candies.

The sliding window technique is like taking a small bag (your "window") and moving it along the line of candies, one step at a time.

1.  Start: You place your bag at the beginning of the line.
2.  Check: You look inside your bag to see if the candies inside meet your special property (e.g., exactly 3 red ones).
3.  Slide: You move your bag one candy to the right.
4.  Check again: You look inside the new group of candies in your bag.
5.  Repeat: You keep sliding the bag and checking until you've gone through all the candies.
